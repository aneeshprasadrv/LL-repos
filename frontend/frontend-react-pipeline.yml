AWSTemplateFormatVersion: 2010-09-09
Description: Pipeline for the react web app

Parameters:
  ProjectId:
    Type: String
    Description: Project ID.
    Default: buildingblocks-react
  # CodeBucket:
  #   Type: String
  #   Description: Bucket in which you have code
  #   Default: buildingblocks-automation
  # CodeKey:
  #   Type: String
  #   Description: key of zipped code
  #   Default: dev/my-shiny-app.zip
  GithubOwner:
    Type: String
    Default: learnlaunch

    Description: "Github repo owner"
  GithubRepo:
    Type: String
    Default: buildingblocks-frontend

    Description: "Github repo name"
  GithubOAuthToken:
    Type: String
    Description: "Github personal access token"
    Default: '{{resolve:secretsmanager:github/personal-access-token-deepak:SecretString}}'
  GithubBranch:
    Type: String
    Default: developement
    Description: "e.g. master or main"
  Environment:
    Type: String
    Default: dev
    Description: "e.g. dev or prod"     

Resources:

#####################################################
## An artifact S3 Bucket to be used by CodePipeline
#####################################################
    ArtifactBucket:
      Type: 'AWS::S3::Bucket'
      Properties:
        BucketName: !Join ['-', [buildingblocks, !Ref Environment, 'pipelineartifact']]
    
    ArtifactBucketPolicy:
      Type: 'AWS::S3::BucketPolicy'
      Description: Setting Amazon S3 bucket policy for AWS CodePipeline access
      Properties:
        Bucket: !Ref ArtifactBucket
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Action:
                - 's3:GetObject'
                - 's3:GetObjectVersion'
                - 's3:GetBucketVersioning'
              Resource:
                - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactBucket}'
                - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactBucket}/*'
              Effect: Allow
              Principal:
                AWS:
                  - !GetAtt CodebuildRole.Arn
            - Action:
                - 's3:PutObject'
              Resource:
                - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactBucket}'
                - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactBucket}/*'
              Effect: Allow
              Principal:
                AWS:
                  - !GetAtt CodebuildRole.Arn
  


    # CodeCommitRepo:
    #   Type: 'AWS::CodeCommit::Repository'
    #   Description: Repo application source code
    #   Properties:
    #     RepositoryName: !Ref ProjectId
    #     Code:
    #       BranchName: main
    #       S3: 
    #         Bucket: !Ref CodeBucket
    #         Key: !Ref CodeKey

#####################################################
## CodeBuild
#####################################################
            
    CodeBuildProject:
      DependsOn:
        - CodebuildRole
      Type: 'AWS::CodeBuild::Project'
      Properties:
        Artifacts:
          Type: codepipeline
          Packaging: zip
        ServiceRole: !Ref CodebuildRole
        Environment:
          Type: LINUX_CONTAINER
          EnvironmentVariables:
            - Name: WEBSITE_S3_BUCKET
              Value: 
                Fn::ImportValue: "cloudfront-test-S3Bucket"
            - Name: WEBSITE_CDN_ID
              Value: 
                Fn::ImportValue: "cloudfront-test-CDNdistributionID"
              

          Image: 'aws/codebuild/standard:4.0'
          ComputeType: medium
        Source:
          Type: codepipeline
        Name: !Join ['-', [buildingblocks-react, !Ref Environment, buildproject]]
        

    CodebuildRole:
      Type: 'AWS::IAM::Role'
      Description: Creating role for codebuild
      Properties:
        Path: /
        RoleName: !Sub 'CodebuildRole-buildingblocks-${Environment}'
        Policies:
          - PolicyName: CodebuildRolePolicy
            PolicyDocument:
              Statement:
                - Action:
                    - 'codecommit:*'
                    - 'codepipeline:*'
                    - 'codebuild:*'
                    - 's3:*'
                    - 'events:*'
                    - 'iam:PassRole'
                    - 'cloudwatch:*'
                    - 'kms:*'
                    - 'cloudformation:*'
                    - 'logs:*'
                    - 'cloudfront:CreateInvalidation'
                  Resource: '*'
                  Effect: Allow

        AssumeRolePolicyDocument:
          Statement:
            - Action: 'sts:AssumeRole'
              Effect: Allow
              Principal:
                Service:
                  - codebuild.amazonaws.com
                  - codedeploy.amazonaws.com
                  - codepipeline.amazonaws.com
                  - events.amazonaws.com
                  
    # SourceEvent:
    #   Type: 'AWS::Events::Rule'
    #   Properties:
    #     EventPattern:
    #       detail-type:
    #         - CodeCommit Repository State Change
    #       resources:
    #         - !Join [ '', [ 'arn:aws:codecommit:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref ProjectId ] ]
    #       detail:
    #         referenceType:
    #           - branch
    #         event:
    #           - referenceCreated
    #           - referenceUpdated
    #         referenceName:
    #           - main
    #       source:
    #         - aws.codecommit
    #     Description: >-
    #       Rule for Amazon CloudWatch Events to detect changes to the source
    #       repository and trigger pipeline execution
    #     State: ENABLED
    #     Targets:
    #       - Id: ProjectPipelineTarget
    #         Arn: !Sub >-
    #           arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${ProjectId}-Pipeline
    #         RoleArn: !GetAtt CodebuildRole.Arn
    #     Name: Demo_Source_Event

    
#####################################################
## Pipeline Creation
#####################################################

    DemoPipeline:
      DependsOn:
        - CodebuildRole
        - ArtifactBucket
        - CodeBuildProject
      Type: 'AWS::CodePipeline::Pipeline'
      Description: Creating an AWS CodePipeline
      Properties:
        RoleArn: !GetAtt CodebuildRole.Arn
        Name: !Join ['-', [buildingblocks-react, !Ref Environment, 'pipeline']]
        ArtifactStore:
          Type: S3
          Location: !Ref ArtifactBucket
        Stages:
          # - Actions:
          #     - ActionTypeId:
          #         Owner: AWS
          #         Category: Source
          #         Version: 1
          #         Provider: CodeCommit
          #       Configuration:
          #         PollForSourceChanges: false
          #         RepositoryName: !Ref ProjectId
          #         BranchName: main
          #       InputArtifacts: []
          #       OutputArtifacts:
          #         - Name: !Sub '${ProjectId}-SourceArtifact'
          #       RunOrder: 1
          #       Name: ApplicationSource
          #   Name: Source
          - 
            Name: Source
            Actions: 
              - 
              
                ActionTypeId: 
                  Category: Source
                  Owner: ThirdParty
                  Provider: GitHub
                  Version: 1
                Configuration:
                  Owner: !Ref GithubOwner
                  Repo: !Ref GithubRepo
                  Branch: !Ref GithubBranch
                  OAuthToken: !Ref GithubOAuthToken
                InputArtifacts: []
                OutputArtifacts:
                  - Name: !Sub '${ProjectId}-SourceArtifact'
                RunOrder: 1
                Name: ApplicationSource

                
          - Actions:
              - ActionTypeId:
                  Owner: AWS
                  Category: Build
                  Version: 1
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Join ['-', [buildingblocks-react, !Ref Environment, buildproject]]
                InputArtifacts:
                  - Name: !Sub '${ProjectId}-SourceArtifact'
                OutputArtifacts: []
                RunOrder: 1
                Name: PackageExport
            Name: Build
          
Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${DemoPipeline}
    Description: CodePipeline URL